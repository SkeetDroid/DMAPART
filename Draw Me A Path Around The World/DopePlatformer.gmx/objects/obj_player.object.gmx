<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1215752191</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0; // vertical speed
hsp = 0; // horizontal speed
onGround = false; // is the player on the ground, or not? (in air)
onPlatform = false;
wall = false; // is the player touching a wall?
gamepad=false;
//wallSlide = false; // is the player wall SLIDING?
//wallJumpPenalty = 0; // the number of frames the players movement will be affected from wall jumping (to prevent easy wall climbing)
G = .5; // graviti 
vis = 0; // how is visible is the player right now?

//create mesh variables
//creating static mesh ( pseudo-circle, 10 vertex )
playermesh=tl_mesh_create_from_sprite(spr_player, false);

//moving mesh at instance position
tl_mesh_move(playermesh,x,y);

//set the the hybrid system for this mesh
tl_mesh_hybrid(playermesh,id);

angle=0
aiming=false
helditem=1
items[1]="Lead Boots"
items[2]="Magic Hourglass"
items[3]="Voodoo Wand"
items[4]="Bomb"
items[5]="Fire Brush"
items[6]="Ice Brush"
items[7]="Rubber Chicken"
leadboots=false
voodoo=false
candraw=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
old walljump code
if(wallJumpPenalty &gt; 0){
    wallJumpPenalty -= 1; // manage walljump penalty timer
}
*/

handle_input();
handle_items()
prevent_collisions();

if leadboots=true x += hsp/4 else x += hsp;
y += vsp;

//get players visibility
vis = tl_get_lighting(x,y);

//update the mesh position
tl_mesh_move(playermesh,x,y);


//If gamepad is used, enable it.
if gamepad_axis_value(0,gp_axislh)&gt;0.2 or
gamepad_axis_value(0,gp_axislh)&lt;-0.2 or
gamepad_axis_value(0,gp_axisrh)&gt;0.2 or
gamepad_axis_value(0,gp_axisrh)&lt;-0.2 or
gamepad_button_check(0,gp_face1) or
gamepad_button_check(0,gp_face2) or
gamepad_button_check(0,gp_face3) or
gamepad_button_check(0,gp_face4) or
gamepad_button_check(0,gp_padd) or
gamepad_button_check(0,gp_padr) or
gamepad_button_check(0,gp_padl) or
gamepad_button_check(0,gp_shoulderrb) or
gamepad_button_check(0,gp_shoulderr) or
gamepad_button_check(0,gp_shoulderlb) or
gamepad_button_check(0,gp_shoulderl) or
gamepad_button_check(0,gp_select) or
gamepad_button_check(0,gp_start) or
gamepad_button_check(0,gp_stickl) or
gamepad_button_check(0,gp_stickr)
{gamepad=true}

constainMovement()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visState = "";
draw_set_color(c_white);
draw_text(100,100, "Visibility: " + string(vis));
draw_text(100,125," OnGround: " + string(onGround));
//draw_text(100,150," WallSliding: " + string(wallSlide));
draw_text(100,150," onPlatform: " + string(onPlatform));
draw_text(100,200, "hsp: " + string(hsp));
draw_text(100,225, "vsp: " + string(vsp));
draw_text(100,250, "Aiming: "+string(aiming))
draw_text(100,275, "Aiming Angle: "+string(angle))
draw_text(100,300, "Held Item: "+string(items[helditem]))
draw_text(100,325, "Lead Boots Enabled: "+string(leadboots))
draw_text(100,350, "Magic Hourglass Enabled: INDEV")
draw_text(100,375, "Voodoo Wand Enabled: "+string(voodoo))


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if aiming=true
draw_sprite_ext(spr_aim_line,0,x,y-32,1,1,angle,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
